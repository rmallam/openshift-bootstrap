{{- if eq .Values.kafka.enabled true }}
apiVersion: v1
kind: Namespace
metadata:
  name: kafka
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: kafka
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  kafka:
    {{- if eq .Values.kafka.dedicatedNode true }}
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - Kafka
        tolerations:
          - effect: NoSchedule
            key: dedicated
            operator: Equal
            value: Kafka
    {{- end }}
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: '3.2'
    storage:
      type: persistent-claim
      size: 5Gi
      deleteClaim: true
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    version: 3.5.0
    replicas: 3
  entityOperator:
    {{- if eq .Values.kafka.dedicatedNode true }}
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - Kafka
        tolerations:
          - effect: NoSchedule
            key: dedicated
            operator: Equal
            value: Kafka
    {{- end }}
    topicOperator: {}
    userOperator: {}
  zookeeper:
    {{- if eq .Values.kafka.dedicatedNode true }}
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: dedicated
                      operator: In
                      values:
                        - Kafka
        tolerations:
          - effect: NoSchedule
            key: dedicated
            operator: Equal
            value: Kafka
    {{- end }}
    storage:
      type: persistent-claim
      deleteClaim: true
      size: 2Gi
    replicas: 3
{{- end }}